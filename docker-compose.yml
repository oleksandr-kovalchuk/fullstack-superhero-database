version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: superhero_postgres
    restart: always
    environment:
      POSTGRES_USER: superhero_user
      POSTGRES_PASSWORD: superhero_password
      POSTGRES_DB: superhero_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U superhero_user -d superhero_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: superhero_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@superhero.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: superhero_backend
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://superhero_user:superhero_password@postgres:5432/superhero_db
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        npx prisma db push --accept-data-loss &&
        echo 'Database schema pushed successfully!' &&
        npm start
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: superhero_frontend
    restart: always
    environment:
      NODE_ENV: production
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  pgadmin_data: